import os, sqlite3
import discord
from discord.ext import commands
import string, json

intents=intents=discord.Intents.all()
bot = commands.Bot(command_prefix='-', intents=intents)


#–ò–≤–µ–Ω—Ç—ã –Ω–∞ —Å—Ç–∞—Ä—Ç–µ –∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏.
@bot.event
async def on_ready():
	print("–Ø –Ω–∞ –º–µ—Å—Ç–µ")

	global base, cursor, base2, cursor2
	base = sqlite3.connect("–ë–æ—Ç.db")
	cursor = base.cursor()
	if base:
		print("–° –ë–¥ –≤—Å–µ —Ö–æ—Ä–æ—à–æ")
	base2 = sqlite3.connect("students.db")
	cursor2 = base2.cursor()
	if base2:
		print("–°–æ –≤—Ç–æ—Ä–æ–π –ë–î –≤—Å–µ –Ω–æ—Ä–º")


@bot.event
async def on_member_join(member):
	await member.send('–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, —á—Ç–æ–±—ã –í—ã —Å–º–æ–≥–ª–∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–∞–±–æ—Ç—É –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–æ–π–¥–∏—Ç–µ –≤ –∫–∞–Ω–∞–ª <–ø–æ–ª—É—á–µ–Ω–∏–µ-—Ä–æ–ª–µ–π> –∏\n \
		–Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ <-–§–ò–û *–∑–¥–µ—Å—å –í–∞—à–∏ –§–∞–º–∏–ª–∏—è, –∏–º—è, –æ—Ç—á–µ—Å—Ç–≤–æ*>, –µ—Å–ª–∏ –í—ã –Ω–µ —Å—Ç—É–¥–µ–Ω—Ç, —Ç–æ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∏–Ω–∂–µ–Ω–µ—Ä–∞–º\n \
		–¥–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞. –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ')

	for i in bot.get_guild(member.guild.id).channels:
		if i.name == "–æ—Å–Ω–æ–≤–Ω–æ–π":
			await bot.get_channel(i.id).send(f"{member.mention}, –î–æ–±—Ä–æ –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å, –≤—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —É –í–∞—Å –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö.")
	role = discord.utils.get(member.guild.roles, name='–°—Ç—É–¥–µ–Ω—Ç')        
	await member.add_roles(role)
#/


#–ö–æ–º–∞–Ω–¥—ã –Ω–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ë–î(–ø–æ–º–æ—â—å –∏ –≥—Ä—É–ø–ø–∞)
@bot.command()
async def –ø–æ–º–æ—â—å(ctx, *, args=None):
	author = ctx.message.author
	if args == None:
		await ctx.send(f"{author.mention}, —è –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π —á—Ç–æ–±—ã —Å–ª–µ–¥–∏—Ç—å –∑–∞ –í–∞—à–µ–π —Ä–µ—á—å—é")
	elif args == "—è –¥–∞—É–Ω":
		await ctx.send(f"{author.mention}, —Å–æ–±–æ–ª–µ–∑–Ω—É—é")


@bot.command()
async def –∏–Ω—Ñ–æ(ctx):
	await ctx.message.send("–î–∞–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –ù–∏–∫–æ–ª–∞–µ–º –ë—É—à–º–∞–Ω–æ–≤—ã–º –≤ —Å–æ–¥—Ä—É–∂–µ—Å—Ç–≤–µ —Å gr.samoxin a.k.a. –ì—Ä–∏–≥–æ—Ä–∏–π –°–∞–º–æ—Ö–∏–Ω \n \
		—Å—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–ø—ã 2-–ú–î–ê-9. /n –í—Å–µ–≥–æ —Ö–æ—Ä–æ—à–µ–≥–æ.")
@bot.command()
async def –≥—Ä—É–ø–ø–∞(ctx, member: discord.Member, role: discord.Role):
	getrole = discord.utils.get(ctx.guild.roles, id = role.id)
	await member.add_roles(getrole)
#/

#–ö–æ–º–∞–Ω–¥—ã —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –ë–î(–ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞, –æ–±–Ω—É–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–∞) –ò—Ö –¥–≤–µ
@bot.command()
async def —Å—Ç–∞—Ç—É—Å(ctx):
	base.execute("""CREATE TABLE IF NOT EXISTS '%{}%'(user_id INT, count INT)""".format(ctx.message.guild.name))
	base.commit()
	warnings = cursor.execute("""SELECT * FROM '%{}%' WHERE user_id == ?""".format(ctx.message.guild.name),\
		(ctx.message.author.id,)).fetchone()
	if warnings == None:
		await ctx.send(f"{ctx.message.author.mention}, —É –í–∞—Å –Ω–µ—Ç –Ω–∞—Ä—É—à–µ–Ω–∏–π")
	else:	
		await ctx.send(f"{ctx.message.author.mention}, —É –í–∞—Å {warnings[1]} –Ω–∞—Ä—É—à–µ–Ω–∏–π")


@commands.has_role("–ò–Ω–∂–µ–Ω–µ—Ä")
@bot.command()
async def –æ–±–Ω—É–ª–∏—Ç—å(ctx, arg):
	cursor.execute("""UPDATE '%{}%' SET count = ? WHERE user_id = ?""".format(ctx.message.guild.name), (0, arg))
	base.commit()
#/


#–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–æ–ª–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
@bot.command(pass_context=True)
@commands.has_permissions(change_nickname=True)
async def –§–ò–û(ctx, *args, nick=None):
	member = ctx.message.author
	Full_name = args
	Full_name = ' '.join(Full_name)
	NAMES = cursor2.execute("""SELECT Name_of_Group FROM student WHERE Fio = ?""", (Full_name,)).fetchone()
	NAMES = ''.join(NAMES)
	Is_Registred = cursor2.execute("""SELECT Registration FROM student WHERE Fio = ?""", (Full_name,)).fetchone()
	Is_Registred = ''.join(Is_Registred)
	print (Is_Registred)
	if Is_Registred != 'True':
		role = discord.utils.get(bot.get_guild(ctx.guild.id).roles, name = NAMES)
		await member.add_roles(role)
		try:
			nick = Full_name
			await member.edit(nick=nick)
		except Exception as e:
			await ctx.send(str(e))
		cursor2.execute("""UPDATE student SET Registration = ? WHERE Fio = ?""", ('True', Full_name,))
		base2.commit()
	else:
		await ctx.send(f"{ctx.message.author.mention}, –≤–∏–¥–∏–º–æ –í—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –í–∞—à—É —Ä–æ–ª—å, –ª–∏–±–æ –≤–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –∏ –í–∞–º –Ω—É–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –∏–Ω–∂–µ–Ω–µ—Ä–∞–º —Å–µ—Ä–≤–µ—Ä–∞")
#/

#–†–µ–∞–∫—Ü–∏–∏ –∏ —Ä–æ–ª–∏
@bot.event
async def on_raw_reaction_add(payload):
	message_id = payload.message_id
	if message_id == 871943332778106911:
		guild = bot.get_guild(payload.guild_id)

		if payload.emoji.name in roles:
			if payload.emoji.name == "ü¶ä":
				role = discord.utils.get(guild.roles, name = "1-–ú–î–ê-9")
			elif payload.emoji.name == "üê≤":
				role = discord.utils.get(guild.roles, name = "2-–ú–î–ê-9")
			elif payload.emoji.name == "üêª":
				role = discord.utils.get(guild.roles, name = "3-–ú–î–ê-9")
			elif payload.emoji.name == "üêµ":
				role = discord.utils.get(guild.roles, name = "4-–ú–î–ê-9")
			elif payload.emoji.name == "ü¶Å":
				role = discord.utils.get(guild.roles, name = "1-–ú–î–ê-7")
			elif payload.emoji.name == "üê±":
				role = discord.utils.get(guild.roles, name = "2-–ú–î–ê-7")
			elif payload.emoji.name == "ü¶ù":
				role = discord.utils.get(guild.roles, name = "3-–ú–î–ê-7")
			elif payload.emoji.name == "üê≠":
				role = discord.utils.get(guild.roles, name = "4-–ú–î–ê-7")
			elif payload.emoji.name == "üêπ":
				role = discord.utils.get(guild.roles, name = "1-–ú–î-16")
			elif payload.emoji.name == "üêº":
				role = discord.utils.get(guild.roles, name = "2-–ú–î-16")
			elif payload.emoji.name == "ü¶â":
				role = discord.utils.get(guild.roles, name = "3-–ú–î-16")
			else:
				role = discord.utils.get(guild.roles, name = "4-–ú–î-16")

			if role is not None:
				member = payload.member
				if member is not None:
					await member.add_roles(role)
				else: 
					print("–ß–µ–ª–æ–≤–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
			else:
				print("–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


@bot.event
async def on_raw_reaction_remove(payload):
	message_id = payload.message_id
	if message_id == 871943332778106911:
		guild = bot.get_guild(payload.guild_id)

		if payload.emoji.name in roles:
			if payload.emoji.name == "ü¶ä":
				role = discord.utils.get(guild.roles, name = "1-–ú–î–ê-9")
			elif payload.emoji.name == "üê≤":
				role = discord.utils.get(guild.roles, name = "2-–ú–î–ê-9")
			elif payload.emoji.name == "üêª":
				role = discord.utils.get(guild.roles, name = "3-–ú–î–ê-9")
			elif payload.emoji.name == "üêµ":
				role = discord.utils.get(guild.roles, name = "4-–ú–î–ê-9")
			elif payload.emoji.name == "ü¶Å":
				role = discord.utils.get(guild.roles, name = "1-–ú–î–ê-7")
			elif payload.emoji.name == "üê±":
				role = discord.utils.get(guild.roles, name = "2-–ú–î–ê-7")
			elif payload.emoji.name == "ü¶ù":
				role = discord.utils.get(guild.roles, name = "3-–ú–î–ê-7")
			elif payload.emoji.name == "üê≠":
				role = discord.utils.get(guild.roles, name = "4-–ú–î–ê-7")
			elif payload.emoji.name == "üêπ":
				role = discord.utils.get(guild.roles, name = "1-–ú–î-16")
			elif payload.emoji.name == "üêº":
				role = discord.utils.get(guild.roles, name = "2-–ú–î-16")
			elif payload.emoji.name == "ü¶â":
				role = discord.utils.get(guild.roles, name = "3-–ú–î-16")
			else:
				role = discord.utils.get(guild.roles, name = "4-–ú–î-16")

			if role is not None:
				member = guild.get_member(payload.user_id)
				if member is not None:
					await member.remove_roles(role)
				else: 
					print("–ß–µ–ª–æ–≤–µ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω")
			else:
				print("–†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
#/


#–û—Å–Ω–æ–≤–Ω–æ–π –∞–ª–≥–æ—Ä–∏—Ç–º —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞
@bot.event
async def on_message(message):
	if {i.lower().translate(str.maketrans('','', string.punctuation)) for i in message.content.split(" ")}\
	.intersection(set(json.load(open('cenz.json')))) != set():
			await message.channel.send(f"{message.author.mention}, —Ç—ã —Ç–∞–∫–æ–µ –Ω–µ –≥–æ–≤–æ—Ä–∏, –±—Ä–∞—Ç")
			
			await message.delete()

			name = message.guild.name

			base.execute("""CREATE TABLE IF NOT EXISTS '%{}%'(user_id INT, count INT)""".format(name))
			base.commit()

			warnings = cursor.execute("""SELECT * FROM '%{}%' WHERE user_id == ?""".format(name), (message.author.id,)).fetchone()

			if warnings == None:
				cursor.execute("""INSERT INTO '%{}%' VALUES(?, ?)""".format(name), (message.author.id, 1))
				base.commit()
				await message.channel.send(f"{message.author.mention}, —É –í–∞—Å –ø–µ—Ä–≤–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –∑–∞ 3 —Ç–∞–∫–∏—Ö, –í–∞—Å –∑–∞–º—å—é—Ç–∏—Ç")

			elif warnings[1] == 1:
				cursor.execute("""UPDATE '%{}%' SET count = ? WHERE user_id = ?""".format(name), (2,message.author.id,))
				base.commit()
				await message.channel.send(f"{message.author.mention}, —É –í–∞—Å –≤—Ç–æ—Ä–æ–µ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –∑–∞ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É, –∑–∞ 3 —Ç–∞–∫–∏—Ö, –í–∞—Å –∑–∞–º—å—é—Ç–∏—Ç")

			elif warnings[1] == 2:
				cursor.execute("""UPDATE '%{}%' SET count = ? WHERE user_id = ?""".format(name), (3,message.author.id,))
				base.commit()
				await message.channel.send(f"{message.author.mention} –∑–∞–º—å—é—á–µ–Ω –∑–∞ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω—É—é –ª–µ–∫—Å–∏–∫—É")
				await message.author.ban(reason='–ù–µ—Ü–µ–Ω–∑—É—Ä–Ω–∞—è –ª–µ–∫—Å–∏–∫–∞')

	await bot.process_commands(message)
#/

bot.run(os.getenv('TOKEN'))